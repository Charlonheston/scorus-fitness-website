---
/**
 * MobileMenu - Menú hamburger para móvil
 * Diseño 2025: Drawer animado, backdrop blur, smooth transitions
 */

// Detectar idioma desde la URL
const currentPath = Astro.url.pathname;
const pathParts = currentPath.split('/').filter(Boolean);
const potentialLang = pathParts[0];
const currentLang = ['en', 'fr', 'de', 'hu'].includes(potentialLang) ? potentialLang : 'es';

// Configuración de navegación por idioma (misma que Navigation.astro)
const navigationConfig = {
  es: {
    items: [
      { name: 'Inicio', href: '/es/' },
      {
        name: 'Servicios',
        href: '/es/servicios',
        children: [
          { name: 'Entrenamiento Personal', href: '/es/servicios/entrenamiento-personal' },
          { name: 'Consultas Online', href: '/es/servicios/consultoria-online' },
          { name: 'Asesoramiento Online', href: '/es/servicios/asesoramiento-online' },
          { name: 'Scorus Campus', href: '/es/academia/scorus-campus' },
        ],
      },
      {
        name: 'Academia',
        href: '/es/academia',
        children: [
          { name: 'Talleres', href: '/es/servicios/talleres' },
          { name: 'Seminarios', href: '/es/servicios/seminarios' },
          { name: 'Video Cursos', href: '/es/servicios/video-cursos' },
          { name: 'RE-BORN', href: '/es/academia/re-born' },
        ],
      },
      { name: 'GYM', href: '/es/gym' },
      { name: 'Biografía', href: '/es/biografia' },
      { name: 'Blog', href: '/es/blog' },
      { name: 'Contacto', href: '/es/contacto' },
    ]
  },
  en: {
    items: [
      { name: 'Home', href: '/en/' },
      {
        name: 'Services',
        href: '/en/services',
        children: [
          { name: 'Personal Training', href: '/en/services/personal-training' },
          { name: 'Online Consulting', href: '/en/services/online-consulting' },
          { name: 'Online Counseling', href: '/en/services/online-counseling' },
          { name: 'Scorus Campus', href: '/en/academy/scorus-campus' },
        ],
      },
      {
        name: 'Academy',
        href: '/en/academy',
        children: [
          { name: 'Workshops', href: '/en/services/workshops' },
          { name: 'Seminars', href: '/en/services/seminars' },
          { name: 'Video Courses', href: '/en/services/video-courses' },
          { name: 'RE-BORN', href: '/en/academy/re-born' },
        ],
      },
      { name: 'GYM', href: '/en/gym' },
      { name: 'Biography', href: '/en/biography' },
      { name: 'Blog', href: '/en/blog' },
      { name: 'Contact', href: '/en/contact' },
    ]
  },
  fr: {
    items: [
      { name: 'Accueil', href: '/fr/' },
      {
        name: 'Services',
        href: '/fr/services',
        children: [
          { name: 'Entraînement Personnel', href: '/fr/services/entrainement-personnel' },
          { name: 'Consultation En Ligne', href: '/fr/services/consultation-en-ligne' },
          { name: 'Conseil En Ligne', href: '/fr/services/conseil-en-ligne' },
          { name: 'Scorus Campus', href: '/fr/academie/scorus-campus' },
        ],
      },
      {
        name: 'Académie',
        href: '/fr/academie',
        children: [
          { name: 'Ateliers', href: '/fr/services/ateliers' },
          { name: 'Séminaires', href: '/fr/services/seminaires' },
          { name: 'Cours Vidéo', href: '/fr/services/cours-video' },
          { name: 'RE-BORN', href: '/fr/academie/re-born' },
        ],
      },
      { name: 'GYM', href: '/fr/gym' },
      { name: 'Biographie', href: '/fr/biographie' },
      { name: 'Blog', href: '/fr/blog' },
      { name: 'Contact', href: '/fr/contact' },
    ]
  },
  de: {
    items: [
      { name: 'Startseite', href: '/de/' },
      {
        name: 'Dienstleistungen',
        href: '/de/dienstleistungen',
        children: [
          { name: 'Personal Training', href: '/de/dienstleistungen/personliches-training' },
          { name: 'Online-Beratung', href: '/de/dienstleistungen/online-beratung' },
          { name: 'Online-Coaching', href: '/de/dienstleistungen/online-coaching' },
          { name: 'Scorus Campus', href: '/de/akademie/scorus-campus' },
        ],
      },
      {
        name: 'Akademie',
        href: '/de/akademie',
        children: [
          { name: 'Workshops', href: '/de/dienstleistungen/workshops' },
          { name: 'Seminare', href: '/de/dienstleistungen/seminare' },
          { name: 'Video-Kurse', href: '/de/dienstleistungen/video-kurse' },
          { name: 'RE-BORN', href: '/de/akademie/re-born' },
        ],
      },
      { name: 'GYM', href: '/de/gym' },
      { name: 'Biografie', href: '/de/biografie' },
      { name: 'Blog', href: '/de/blog' },
      { name: 'Kontakt', href: '/de/kontakt' },
    ]
  },
  hu: {
    items: [
      { name: 'Kezdőlap', href: '/hu/' },
      {
        name: 'Szolgáltatások',
        href: '/hu/szolgaltatasok',
        children: [
          { name: 'Személyi Edzés', href: '/hu/szolgaltatasok/szemelyi-edzes' },
          { name: 'Online Tanácsadás', href: '/hu/szolgaltatasok/online-tanacsadas' },
          { name: 'Online Coaching', href: '/hu/szolgaltatasok/online-coaching' },
          { name: 'Scorus Campus', href: '/hu/akademia/scorus-campus' },
        ],
      },
      {
        name: 'Akadémia',
        href: '/hu/akademia',
        children: [
          { name: 'Workshopok', href: '/hu/szolgaltatasok/workshopok' },
          { name: 'Szemináriumok', href: '/hu/szolgaltatasok/szeminariumok' },
          { name: 'Videó Kurzusok', href: '/hu/szolgaltatasok/video-kurzusok' },
          { name: 'RE-BORN', href: '/hu/akademia/re-born' },
        ],
      },
      { name: 'GYM', href: '/hu/gym' },
      { name: 'Életrajz', href: '/hu/eletrajz' },
      { name: 'Blog', href: '/hu/blog' },
      { name: 'Kapcsolat', href: '/hu/kapcsolat' },
    ]
  }
};

type Lang = 'es' | 'en' | 'fr' | 'de' | 'hu';
const navItems = navigationConfig[currentLang as Lang]?.items || navigationConfig.es.items;
---

<!-- Botón Hamburger (solo visible en móvil) -->
<button
  id="mobile-menu-button"
  type="button"
  class="inline-flex items-center justify-center p-2 text-current transition-colors hover:text-red-600 lg:hidden drop-shadow-lg"
  aria-label="Abrir menú"
  aria-expanded="false"
>
  <svg class="h-6 w-6 drop-shadow-lg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2.5">
    <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
  </svg>
</button>

<!-- Overlay (backdrop) -->
<div
  id="mobile-menu-overlay"
  class="fixed inset-0 z-40 bg-black/60 opacity-0 backdrop-blur-sm transition-opacity duration-300 lg:hidden"
  style="pointer-events: none;"
  aria-hidden="true"
></div>

<!-- Drawer Menu -->
<div
  id="mobile-menu-drawer"
  class="fixed right-0 top-0 z-50 h-full w-80 max-w-[85vw] translate-x-full bg-white shadow-2xl transition-transform duration-300 ease-in-out lg:hidden"
  role="dialog"
  aria-modal="true"
  aria-label="Menú de navegación"
>
  <!-- Header del drawer -->
  <div class="flex items-center justify-between border-b-2 border-red-600 bg-black p-6">
    <img 
      src="/images/logos/logo-scorus-white.png" 
      alt="Scorus Fitness" 
      class="h-12 w-auto"
    />
    <button
      id="mobile-menu-close"
      type="button"
      class="rounded-lg p-2 text-white transition-colors hover:bg-white/10"
      aria-label="Cerrar menú"
    >
      <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2.5">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>

  <!-- Contenido del menú -->
  <nav class="overflow-y-auto p-6" style="max-height: calc(100vh - 80px);">
    <ul class="space-y-2">
      {navItems.map((item) => {
        // Detectar si es la página de inicio (home)
        const isHome = item.href.match(/^\/(es|en|fr|de|hu)\/?$/);
        
        return (
        <li>
          {item.children ? (
            <!-- Item con submenu -->
            <div class="mobile-menu-item-with-submenu">
              <button
                type="button"
                class="mobile-menu-toggle flex w-full items-center justify-between rounded-lg px-4 py-3 text-left text-sm font-bold uppercase tracking-wider text-gray-800 transition-colors hover:bg-gray-100 hover:text-red-600"
              >
                <span>{item.name}</span>
                <svg class="mobile-menu-icon h-4 w-4 transition-transform duration-200" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              <ul class="mobile-menu-submenu mt-1 hidden space-y-1 pl-4">
                <li>
                  <a
                    href={item.href}
                    class="block rounded-lg border-l-4 border-transparent px-4 py-2 text-sm font-semibold uppercase tracking-wider text-gray-600 transition-all hover:border-red-600 hover:bg-gray-50 hover:text-red-600"
                  >
                    Ver Todos
                  </a>
                </li>
                {item.children.map((child) => (
                  <li>
                    <a
                      href={child.href}
                      class:list={[
                        'block rounded-lg border-l-4 px-4 py-2 text-sm font-semibold uppercase tracking-wider transition-all',
                        currentPath === child.href
                          ? 'border-red-600 bg-red-50 text-red-600'
                          : 'border-transparent text-gray-600 hover:border-red-600 hover:bg-gray-50 hover:text-red-600',
                      ]}
                    >
                      {child.name}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          ) : (
            <!-- Item simple -->
            <a
              href={item.href}
              class:list={[
                'flex items-center gap-2 rounded-lg px-4 py-3 text-sm font-bold uppercase tracking-wider transition-colors',
                currentPath === item.href
                  ? 'bg-red-600 text-white'
                  : 'text-gray-800 hover:bg-gray-100 hover:text-red-600',
              ]}
            >
              {isHome ? (
                /* Icono de casa para la página de inicio */
                <svg 
                  class="h-5 w-5 inline-block" 
                  fill="none" 
                  viewBox="0 0 24 24" 
                  stroke="currentColor" 
                  stroke-width="2.5"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                </svg>
              ) : null}
              <span>{item.name}</span>
            </a>
          )}
        </li>
        );
      })}
    </ul>
  </nav>
</div>

<script is:inline>
  (function() {
    function initMobileMenu() {
      const button = document.getElementById('mobile-menu-button');
      const overlay = document.getElementById('mobile-menu-overlay');
      const drawer = document.getElementById('mobile-menu-drawer');
      const closeButton = document.getElementById('mobile-menu-close');

      if (!button || !overlay || !drawer || !closeButton) {
        console.warn('MobileMenu: Elementos no encontrados');
        return;
      }

      // Eliminar listeners previos para evitar duplicados
      const oldButton = button.cloneNode(true);
      button.parentNode?.replaceChild(oldButton, button);
      const newButton = document.getElementById('mobile-menu-button');
      
      const oldClose = closeButton.cloneNode(true);
      closeButton.parentNode?.replaceChild(oldClose, closeButton);
      const newClose = document.getElementById('mobile-menu-close');

      const oldOverlay = overlay.cloneNode(true);
      overlay.parentNode?.replaceChild(oldOverlay, overlay);
      const newOverlay = document.getElementById('mobile-menu-overlay');

      if (!newButton || !newOverlay || !newClose) return;

      // Abrir menú
      function openMenu(e) {
        e?.preventDefault();
        e?.stopPropagation();
        console.log('Abriendo menú mobile');
        newOverlay.style.pointerEvents = 'auto';
        newOverlay.style.display = 'block';
        newOverlay.classList.remove('opacity-0');
        newOverlay.classList.add('opacity-100');
        drawer.classList.remove('translate-x-full');
        drawer.classList.add('translate-x-0');
        newButton.setAttribute('aria-expanded', 'true');
        document.body.style.overflow = 'hidden';
      }

      // Cerrar menú
      function closeMenu(e) {
        e?.preventDefault();
        e?.stopPropagation();
        console.log('Cerrando menú mobile');
        newOverlay.classList.remove('opacity-100');
        newOverlay.classList.add('opacity-0');
        drawer.classList.remove('translate-x-0');
        drawer.classList.add('translate-x-full');
        newButton.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
        setTimeout(() => {
          newOverlay.style.pointerEvents = 'none';
          newOverlay.style.display = 'none';
        }, 300);
      }

      // Event listeners
      newButton.addEventListener('click', openMenu);
      newClose.addEventListener('click', closeMenu);
      newOverlay.addEventListener('click', closeMenu);

      // Cerrar con ESC
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && drawer.classList.contains('translate-x-0')) {
          closeMenu();
        }
      });

      // Toggle submenus
      const toggleButtons = document.querySelectorAll('.mobile-menu-toggle');
      toggleButtons.forEach((btn) => {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          e.stopPropagation();
          const parent = btn.closest('.mobile-menu-item-with-submenu');
          if (!parent) return;
          
          const submenu = parent.querySelector('.mobile-menu-submenu');
          const icon = parent.querySelector('.mobile-menu-icon');
          
          if (submenu && icon) {
            submenu.classList.toggle('hidden');
            icon.classList.toggle('rotate-180');
          }
        });
      });
      
      console.log('MobileMenu inicializado correctamente');
    }

    // Ejecutar inmediatamente si el DOM ya está listo
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initMobileMenu);
    } else {
      // DOM ya está listo, ejecutar inmediatamente
      initMobileMenu();
    }
    
    // Reinicializar en navegación de Astro (View Transitions)
    document.addEventListener('astro:page-load', initMobileMenu);
  })();
</script>

<style>
  /* Smooth scrolling en el drawer */
  #mobile-menu-drawer nav {
    scrollbar-width: thin;
    scrollbar-color: #dc2626 #f1f1f1;
  }

  #mobile-menu-drawer nav::-webkit-scrollbar {
    width: 6px;
  }

  #mobile-menu-drawer nav::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  #mobile-menu-drawer nav::-webkit-scrollbar-thumb {
    background: #dc2626;
    border-radius: 3px;
  }

  #mobile-menu-drawer nav::-webkit-scrollbar-thumb:hover {
    background: #b91c1c;
  }
</style>

